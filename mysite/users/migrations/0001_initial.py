# Generated by Django 4.1.2 on 2023-06-05 00:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('real_name', models.CharField(max_length=255, null=True, verbose_name='Tên')),
                ('gender', models.CharField(choices=[('man', 'Nam'), ('woman', 'Nữ'), ('undefined', 'Không xác định')], default='undefined', max_length=20)),
                ('phone', models.CharField(blank=True, default=None, max_length=15, null=True, unique=True)),
                ('citizen_identification', models.CharField(max_length=20, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('avatar', models.FileField(default='/media/images/default.jpeg', max_length=255, upload_to='D:\\C++_workspace\\projects\\helloworld\\Web_book_appointment_with_doctor_1\\mysite\\media\\images')),
                ('is_admin', models.BooleanField(default=False)),
                ('province', models.CharField(choices=[('ho_chi_minh', 'TP. Hồ Chí Minh'), ('ha_noi', 'Hà Nội'), ('da_nang', 'Đà Nẵng'), ('hai_phong', 'Hải Phòng'), ('can_tho', 'Cần Thơ'), ('cao_bang', 'Cao Bằng'), ('an_giang', 'An Giang'), ('bac_giang', 'Bắc Giang'), ('bac_kan', 'Bắc Kạn'), ('bac_lieu', 'Bạc Liêu'), ('bac_ninh', 'Bắc Ninh'), ('ben_tre', 'Bến Tre'), ('binh_dinh', 'Bình Định'), ('binh_duong', 'Bình Dương'), ('binh_phuoc', 'Bình Phước'), ('binh_thuan', 'Bình Thuận'), ('ca_mau', 'Cà Mau'), ('cao_bang', 'Cao Bằng'), ('dak_lak', 'Đắk Lắk'), ('dak_nong', 'Đắk Nông'), ('dien_bien', 'Điện Biên'), ('dong_nai', 'Đồng Nai'), ('dong_thap', 'Đồng Tháp'), ('gia_lai', 'Gia Lai'), ('ha_giang', 'Hà Giang'), ('ha_nam', 'Hà Nam'), ('ha_tinh', 'Hà Tĩnh'), ('hai_duong', 'Hải Dương'), ('hau_giang', 'Hậu Giang'), ('hoa_binh', 'Hòa Bình'), ('hung_yen', 'Hưng Yên'), ('khanh_hoa', 'Khánh Hòa'), ('kien_giang', 'Kiên Giang'), ('kon_tum', 'Kon Tum'), ('lai_chau', 'Lai Châu'), ('lam_dong', 'Lâm Đồng'), ('lang_son', 'Lạng Sơn'), ('lao_cai', 'Lào Cai'), ('long_an', 'Long An'), ('nam_dinh', 'Nam Định'), ('nghe_an', 'Nghệ An'), ('ninh_binh', 'Ninh Bình'), ('ninh_thuan', 'Ninh Thuận'), ('phu_tho', 'Phú Thọ'), ('quang_binh', 'Quảng Bình'), ('quang_nam', 'Quảng Nam'), ('quang_ngai', 'Quảng Ngãi'), ('quang_ninh', 'Quảng Ninh'), ('quang_tri', 'Quảng Trị'), ('soc_trang', 'Sóc Trăng'), ('son_la', 'Sơn La'), ('tay_ninh', 'Tây Ninh'), ('thai_binh', 'Thái Bình'), ('thai_nguyen', 'Thái Nguyên'), ('thanh_hoa', 'Thanh Hóa'), ('thua_thien_hue', 'Thừa Thiên Huế'), ('tien_giang', 'Tiền Giang'), ('tra_vinh', 'Trà Vinh'), ('tuyen_quang', 'Tuyên Quang'), ('vinh_long', 'Vĩnh Long'), ('vinh_phuc', 'Vĩnh Phúc'), ('yen_bai', 'Yên Bái')], default='ha_noi', max_length=20)),
                ('new_age', models.IntegerField(blank=True, null=True)),
                ('address', models.TextField(null=True)),
                ('account_left', models.FloatField(default=0)),
                ('credit_score', models.IntegerField(default=100)),
                ('time_join', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
